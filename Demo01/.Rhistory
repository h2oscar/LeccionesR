z<-mtcars
s
cls
z
str(z)
add <- function(x, y) {     x+y }
add(3,4)
h<-10:20
h
h+1
h+1-1
a<-array(c(1,2,3,4,5,6,7,8,9,10,11,12),dim=c(3,4))
a
a<-array(c(1,2,3,4,5,6,7,8,9,10,11,12),dim=c(3,8))
a
d=matrix(c(1,2,3,4,5,6),2,3)
d
m4<-data.frame(grupoa=c(1,1,2,3),grupob=c(4,5,6,7))
m4
row.names<-LETTERS[1:4]
m4
row.names(m4)<-LETTERS[1:4]
m4
cls
colnames(m4)<-letters[1:2]
m4
ro
e<-seq(1,29,by=2)
e
e<-seq(1,29,by=2,length=3)
e<-seq(29,by=2,length=3)
e
e<-seq(1,by=2,length=3)
e
rep(seq(29,by=2,length=3),3)
rep(seq(1,by=2,length=3),3)
ingresos<-5
ingresos
ls()
ls()
history()
history
?solve
data.frame(grupoa=c(1,2,3,4,5),grupob=c(6,7,8,9,0))
rownames()
d=data.frame(grupoa=c(1,2,3,4,5),grupob=c(6,7,8,9,0))
rownames(d)<-LETTERS[1:5]
d
mean(d)
cls
apply(d,2,sum)
d
apply(d,2,mean)
min(d)
cls
cor(d)
mode(d)
install.packages("xlsx")
require(xlsx)
file<-system.file("tests","C:\Users\oscar\Desktop\data\poblacion.xlsx",package="xlsx")
file<-system.file("tests","C:\\Users\\oscar\\Desktop\\data\\poblacion.xlsx",package="xlsx")
file
tests
res<-read.xlsx(file,1)
res<-read.xlsx("C:\\Users\\oscar\\Desktop\\data\\poblacion.xlsx",1)
res
mode(res)
res$Nombres
res$NA.<-null
res$NA.<-NULL
res
res$Peso
?system.file
file<-system.file("C:\\Users\\oscar\\Desktop\\data","poblacion.xlsx",package="xlsx")
file
dir.create("C:\\Users\\oscar\\Desktop\\data\\oscar")
system.file(package = xlsx)
system.file(package = "xlsx")
dir(system.file(package = "xlsx") )
system.file()
system.file(package = "xlsx")
system.file(package = "stats")
dir(system.file(package = "stats"))
system.file(INDEX)
system.file("tests","test_import.xlsx",package = "xlsx")
wb<-loadWorkbook(file)
require(xlsx)
wb<-loadWorkbook(file)
(.packages())
file
file<-system.file("tests","test_import.xlsx",package = "xlsx")
file
wb<-loadWorkbook(file)
wb
sheet<-getSheets(wb)[["deletedFields"]]
sheet
ranges<-getRanges(wb)
ranges
getwd()
setwd("C:\Users\oscar\Desktop\data")
setwd("\Users\oscar\Desktop\data")
setwd("Users\oscar\Desktop\data")
setwd("/Users/oscar/Desktop/data")
getwd()
cls
dir()
?factor
x<-factor(c(1,3,2,4,1,2,3,4),labels = c("verde","azul","rojo","amarillo"))
x
x<-factor(c(1,3,2,4,1,2,3,4,1),labels = c("verde","azul","rojo","amarillo"))
Summary(x)
summary(x)
plot(x)
res
colnames(res)
plot(Edad~Peso,data=res)
plot(Estatura~Peso,data=res)
curve(x^2,from = -3,to = 3)
text(1,1,"x^2")
text(1,1,expresion("x^2"))
text(1,1,expression("x^2"))
text(1,1,expression("sqrt(2)"))
plot(Estatura~Peso,data=res)
plot(x^2,-3,3)
plot(x^2,from=-3,to=3)
plot(x^2,from=-3,To=3)
plot(x^2,From=-3,To=3)
curve(x^2,from=-3,To=3)
curve(x^2,From=-3,To=3)
curve(x^2,from = -3,to = 3)
text(1,2,expression(x^2))
text(1,4,expression(x^2))
text(1,4,expression(y==x^2))
text(1,7,expression(y==x^2))
curve(plogis,from = -3,to = 3)
text(-2,0.8,expression(frac(e^2,1+e^2)))
text(2, 0.2, expression(s ^ 2 == frac(sum((x[i] - bar(x)) ^ 2,i==1,n), n - 1)))
curve(plogis,from = -3,to = 3)
text(2, 0.3, expression(s ^ 2 == frac(sum((x[i] - bar(x)) ^ 2,i==1,n), n - 1)))
x=ordered(c(1,2,3,3,2,1,1,2),labels=c("desacuerdo","neutral","acuerdo"))
x
datos
res
a<-matrix(c(1:9))
a
cls
a<-matrix(c(1:9),ncol = 4)
a<-matrix(c(1:9),ncol = 2)
a<-matrix(c(1:9),ncol = 5)
a<-matrix(c(1:9),ncol = 3)
a
a<-matrix(c(1:12),ncol = 3)
a
is.atomic(a)
a[2,]
a[1,]
a[4,]
a
a[,3]
a[-4,]
magic(3)
solve(a)
a
a=a[-4,]
a
solve(a)
b<-matrix(c(1,2,3,2,3,1,3,1,2),ncol=3)
b
solve(b)
e=solve(b)
e
a
a%*%e
b%*%e
a
r <- 23
apply(a,1,mean)
a
apply(a, 2, mean)
arr<-array(1:24,c(2,3,4))
arr
arr[,,4]
rep(3,10)
cls
genero = factor(c(rep(1,5),rep(2,5)),labels = c("masculino","femenino"))
genero
region<-factor(c(rep(1,3),rep(2,3),rep(3,3)),labels = c("costa","sierra","oriente"))
region
opinion<-factor(c(rep(c(1,2),6)),labels = c("si","no"))
op
opinion
length(genero)
length(region)
length(opinion)
genero <- factor(c(rep(1, 6), rep(2, 6)), labels = c("masculino", "femenino"))
length(genero)
region <- factor(c(rep(1, 4), rep(2, 4), rep(3, 4)), labels = c("costa", "sierra", "oriente"))
length(region)
table(genero,region)
table(genero,region,opi)
table(genero,region,opinion)
table(genero,region,opinion)
tabla<-table(genero,region,opinion)
apply(tabla,c(1,2),sum)
apply(tabla, c(2,3), sum)
datos<-read.delim("Users/oscar/Desktop/data/")
datos<-read.delim("/Users/oscar/Desktop/data/ejemplo.txt")
datos
mode(datos)
rownames(datos)
colnames(datos)
estado<-c("si","no","si","si","no","si")
levels(estado)
estado
Festado<-factor(estado)
Festado
levels(Festado)
x<- array(1:20,dim = c(4,5))
x
apply(x,1,sum)
apply(x,2,sum)
ones(3)
diag(rep(1,4))
a<-matrix(c(1:9),ncol = 3,nrow = 3)
a
a<-matrix(c(1:9),ncol = 3,nrow = 3,byrow = TRUE)
a
a<-matrix(c(1:9),ncol = 3,nrow = 3,byrow = FALSE)
a
a<-matrix(c(1:9),ncol = 3,nrow = 3,byrow = TRUE)
a
m1<-cbind(v1,v2,v3)
v1 <- c(1, 2, 3, 4)
v2 <- c(5, 6, 7, 8)
v3 <- c(9, 10, 11, 12)
m1<-cbind(v1,v2,v3)
m1
m2<-rbind(v1,v2,v3)
m2
pos<-m1[1,1]
pos
pos<-m1[1,]
pos
pos<-m1[,1]
pos
pos<-m1[,2:3]
pos
pos<-m1[,c(1,3)]
pos
pos<-m1[c(2,3),]
pos
m2
diag(m2)
m2
diag(c(1,2))
diag(c(1,2,3))
vec <- rnorm(100, mean = 0, sd = 1)
vec
mean(vec)
vec <- rnorm(1000, mean = 0, sd = 1)
mean(vec)
vec <- rnorm(100000, mean = 0, sd = 1)
mean(vec)
vec <- rnorm(100000000, mean = 0, sd = 1)
mean(vec)
pi
if (!exists('settings')) { settings <- as.environment(list()); }; if (is.environment(settings)) { settings$dbConnection = "Driver={SQL Server};Server=BLASTO\\OS;Database=COLEGIO;Uid=sa;Pwd=13170011"; }
install.packages("RODBC")
library(RODBC)
settings$dbConnection <- 'Driver={SQL Server};Server=BLASTO\\OS;Database=COLEGIO;Uid=sa;Pwd=13170011'
if (!exists('settings')) { settings <- as.environment(list()); }; if (is.environment(settings)) { settings$dbConnection = "Driver={SQL Server};Server=BLASTO\\OS;Database=COLEGIO;Uid=sa;Pwd=13170011"; }
dbConnection <- 'Driver={SQL Server};Server=BLASTO\\OS;Database=COLEGIO;Uid=sa;Pwd=13170011'
conn<-odbcDriverConnect(connection = dbConnection)
sql<-"select * from alumno"
df<-sqlQuery(conn,sql)
df
rown
rownames(df)
colnames(df)
mean(df$Edad)
mean(df$Edad)
mean(df$Edad)
conn<-odbcDriverConnect(connection = dbConnection)
df<-sqlQuery(conn,sql)
df
mean(df$Edad)
 library(RODBC)
 channel <- odbcDriverConnect(dbConnection)
 InputDataSet <- sqlQuery(channel,"select * from alumno" )
 odbcClose(channel)
OutputDataSet <- InputDataSet
OutputDataSet
rtvs::debug_source("~/Visual Studio 2017/Projects/RDemos/Demo01/Demo01/script.R")
 library(RODBC)
 channel <- odbcDriverConnect(dbConnection)
 InputDataSet <- sqlQuery(channel,"select * from alumno" )
 odbcClose(channel)
OutputDataSet <- InputDataSet
ou
ou
OutputDataSet
 library(RODBC)
 channel <- odbcDriverConnect(dbConnection)
 InputDataSet <- sqlQuery(channel,"select * from alumno" )
 odbcClose(channel)
OutputDataSet <- InputDataSet
out
OutputDataSet
 library(RODBC)
 channel <- odbcDriverConnect(dbConnection)
InputDataSet <- sqlQuery(channel, iconv(paste(readLines('~/visual studio 2017/projects/rdemos/demo01/demo01/sqlsproc.query.sql', encoding = 'UTF-8', warn = FALSE), collapse = '\n'), from = 'UTF-8', to = 'ASCII', sub = ''))
 odbcClose(channel)
OutputDataSet <- InputDataSet
OutputDataSet
InputDataSet <- sqlQuery(channel, iconv(paste(readLines('~/visual studio 2017/projects/rdemos/demo01/demo01/sqlsproc.query.sql', encoding = 'UTF-8', warn = FALSE), collapse = '\n'), from = 'UTF-8', to = 'ASCII', sub = ''))
 library(RODBC)
 channel <- odbcDriverConnect(dbConnection)
InputDataSet <- sqlQuery(channel, iconv(paste(readLines('~/visual studio 2017/projects/rdemos/demo01/demo01/sqlsproc.query.sql', encoding = 'UTF-8', warn = FALSE), collapse = '\n'), from = 'UTF-8', to = 'ASCII', sub = ''))
 odbcClose(channel)
OutputDataSet <- InputDataSet
OutputDataSet
ls()
ls()
df:mean
df.mean
mean(df)
settings$dbConnection <- 'Driver={SQL Server};Server=BLASTO\\OS;Database=NYCTaxiData;Uid=sa;Pwd=13170011'
settings$dbConnection <- 'Driver={SQL Server};Server=BLASTO\\OS;Database=NYCTaxiData;Uid=sa;Pwd=13170011'
library(RODBC)
channel <- odbcDriverConnect(connection = dbConnection)
InputDataSet <- sqlQuery(channel, iconv(paste(readLines('~/visual studio 2017/projects/rdemos/demo01/demo01/storeprocedure.query.sql', encoding = 'UTF-8', warn = FALSE), collapse = '\n'), from = 'UTF-8', to = 'ASCII', sub = ''))
InputDataSet$new_key <- InputDataSet$new_key <- paste(     InputDataSet$hack_license,     InputDataSet$medallion,     sep = "_"     )
InputDataSet
dbConnection
dbConnection <- 'Driver={SQL Server};Server=BLASTO\\OS;Database=NYCTaxiData;Uid=sa;Pwd=13170011'
dbConnection <- 'Driver={SQL Server};Server=BLASTO\\OS;Database=NYCTaxiData;Uid=sa;Pwd=13170011'
dbConnection
library(RODBC)
channel <- odbcDriverConnect(connection = dbConnection)
InputDataSet <- sqlQuery(channel, iconv(paste(readLines('~/visual studio 2017/projects/rdemos/demo01/demo01/storeprocedure.query.sql', encoding = 'UTF-8', warn = FALSE), collapse = '\n'), from = 'UTF-8', to = 'ASCII', sub = ''))
InputDataSet
InputDataSet$new_key <- paste(     InputDataSet$hack_license,     InputDataSet$medallion,     sep = "_"     )
odbcClose(channel)
OutputDataSet <- InputDataSet
